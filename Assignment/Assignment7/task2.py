# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19Blqs-RLReAOO8u6FDYxa98fPOb53H4j
"""

def LCS(X,Y):
    import numpy as np 
    m=len(X)+1
    n=len(Y)+1

    c = []
    t = []
    for i in range(1,m+1):
        t.append([None]*n)
        c.append([0]*n)

    for i in range(1,m):
        for j in range(1,n):

            if X[i-1]==Y[j-1]:
                c[i][j]=c[i-1][j-1]+1
                t[i][j]='diagonal'

            elif c[i-1][j]>c[i][j-1]:
                c[i][j]=c[i-1][j]
                t[i][j]='up'

            else:
                c[i][j]=c[i][j-1]
                t[i][j]='left'
    
    ct1 = m-1
    ct2 = n-1
    store = ''

    while t[ct1][ct2] != None:
        if t[ct1][ct2]=='diagonal':
            store = X[ct1-1] + store 
            ct1 -= 1 
            ct2 -= 1 
        elif t[ct1][ct2]=='up':
            ct1 -= 1 
        else:
            ct2 -= 1 

    return store 

f = open("/content/input2.txt","r")
f_w = open("/content/output2.txt","w")
zones = int(f.readline().strip())
X = f.readline().strip()
Y = f.readline().strip()
out = LCS(X,Y)

dic = {'Y':'Yasnaya', \
        'R': 'Rozhok', \
        'S': 'School',\
        'P': 'Pochinki',\
        'F': 'Farm', \
        'M': 'Mylta',\
        'H': 'Shelter', \
        'I': 'Prison'}

ans = ''
for i in dic.keys() :
    for j in out :
        if i == j :
            ans += dic[i] + ' '
correct = (len(out)*100)/zones
f_w.write(f'{ans} \n\
Correctness of prediction: {correct}%')
f_w.close()